version: '1.0'

environments:
  production:
    web:
      domain: foodiefix.com
      ssl: true
      cdn: true
      updates:
        auto_deploy: true
        rollback_enabled: true
        maintenance_window: "01:00-03:00 UTC"
    api:
      domain: api.foodiefix.com
      scaling:
        min_instances: 2
        max_instances: 10
      rate_limiting:
        requests_per_minute: 100
        burst: 150
    database:
      type: mongodb
      replicas: 3
      backup:
        frequency: "daily"
        retention_days: 30

monitoring:
  error_tracking: true
  performance_metrics: true
  user_analytics: true
  system_health:
    cpu_threshold: 80%
    memory_threshold: 85%
    disk_threshold: 90%
  alerts:
    - type: error_rate
      threshold: 1%
      notification: email
    - type: response_time
      threshold: 2s
      notification: slack
    - type: system_resources
      threshold: critical
      notification: [email, slack, sms]

feedback_collection:
  automated_surveys:
    - trigger: order_complete
      delay: 1h
    - trigger: new_user
      delay: 7d
  sentiment_analysis: true
  feature_requests_tracking: true
  customer_support:
    ticketing_system: true
    chat_support: true
    response_time_sla: "2h"

maintenance:
  automated_tasks:
    - task: database_optimization
      schedule: "weekly"
    - task: cache_cleanup
      schedule: "daily"
    - task: security_scan
      schedule: "daily"
    - task: performance_audit
      schedule: "weekly"
  version_control:
    branch_strategy:
      main: production
      staging: pre-release
      development: feature-development
  rollback_procedures:
    enabled: true
    automatic_triggers:
      error_rate: 5%
      response_time: 5s

services:
  web:
    build: ./
    ports: 
      - "3000:3000"
    env_file: .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  database:
    image: mongodb
    volumes:
      - db_data:/data/db
    backup:
      enabled: true
      schedule: "0 2 * * *"

  cache:
    image: redis
    ports:
      - "6379:6379"
    maxmemory: 2gb
    maxmemory-policy: allkeys-lru

  monitoring:
    image: prometheus
    volumes:
      - prometheus_data:/prometheus
    depends_on:
      - web
      - database
      - cache